box: golang

build:
  steps:
    - script:
      name: set API_VERSION
      code: export API_VERSION="v0.2.6"

    - script:
      name: install lirc
      code: |
        apt -qq update
        apt -qq install autoconf libtool libxml2-dev xsltproc python3
        cd /tmp
        git clone git://git.code.sf.net/p/lirc/git lirc
        cd lirc
        git checkout lirc-0_9_2a
        ./autogen.sh
        ./configure
        make
        make install
        ldconfig

    - script:
      name: print version
      code: |
        go version
        lircd -v
        echo "API_VERSION=$API_VERSION"

    - script:
      name: launch lircd
      code: |
        export LIRC_RUN_PATH=$WERCKER_SOURCE_DIR/lirc/test
        cp $LIRC_RUN_PATH/lircd.conf /usr/local/etc/lirc/lircd.conf.d/lighting.conf
        mkdir -p /var/run/lirc
        lircd --logfile=$LIRC_RUN_PATH/lirc.log \
              --allow-simulate \
              --driver simsend

    - setup-go-workspace:
      package-dir: github.com/ww24/lirc-web-api

    - script:
      name: glide install
      code: |
        curl https://glide.sh/get | sh
        glide install

    - script:
      name: go get
      code: |
        go get -u github.com/mitchellh/gox

    - script:
      name: go test
      code: |
        go test -v $(glide nv)

    - script:
      name: show lircd log
      code: |
        cat $LIRC_RUN_PATH/lirc.log

    - script:
      name: cross compile
      code: |
        gox \
          -osarch="darwin/amd64 linux/386 linux/amd64 linux/arm windows/386 windows/amd64" \
          -tags="prod" \
          -ldflags="-X main.version=$API_VERSION" \
          -output="$WERCKER_OUTPUT_DIR/api_{{.OS}}_{{.Arch}}"

    - script:
      name: copy to output
      code: |
        cp "$WERCKER_SOURCE_DIR/README.md" "$WERCKER_OUTPUT_DIR"

    - shellcheck:
      files: install.sh

deploy:
  steps:
    - install-packages:
        packages: lirc file

    - github-create-release:
      token: $GITHUB_TOKEN
      tag: $(./api_linux_386 -v)

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_darwin_amd64

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_linux_386

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_linux_amd64

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_linux_arm

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_windows_386.exe

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: api_windows_amd64.exe
